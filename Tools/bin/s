#!/bin/sh

#
# SCRIPT: s
# AUTHOR: nickeywoo <thenickey@gmail.com>
# DATE: 2014/7/27
#

usage() {
	echo "Usage: s [create|clean|build|help]"
	echo "RPC Service Toolkit"
	echo "Options:"
	echo "  create [service name]   create service proto"
	echo "  clean [service name]    clean service"
	echo "  build                   generator service code"
	echo "  dump                   	dump service dictionary"
	echo "  help                    print help information"
	echo ""
}

create() {
	# check parameters
	if [ $# -lt 2 ]
	then
		echo "Usage: s create [service name]"
		exit 1
	fi

	# check service directory
	if [ -d $2 ]
	then
		echo "Error: $2 service already exists"
		exit 2
	fi

	DATE=`date +%D`
	mkdir $2

	echo "//" >> $2/$2.proto
	echo "//   $2 Service" >> $2/$2.proto
	echo "//" >> $2/$2.proto
	echo "//   DESCRIPTION: " >> $2/$2.proto
	echo "//   AUTHOR: " >> $2/$2.proto
	echo "//   DATE: $DATE" >> $2/$2.proto
	echo "//" >> $2/$2.proto
	echo "" >> $2/$2.proto
	echo "import \"RPCProto/RPCService.proto\";" >> $2/$2.proto
	echo "" >> $2/$2.proto
	echo "option(Author) = \"\";" >> $2/$2.proto
	echo "" >> $2/$2.proto
	echo "service $2 {" >> $2/$2.proto
	echo "" >> $2/$2.proto
	echo "" >> $2/$2.proto
	echo "}" >> $2/$2.proto
	echo "" >> $2/$2.proto
	echo "" >> $2/$2.proto

	echo ".swp" >> $2/.gitignore

	echo "Create $2 Service Success"
}

clean() {
	rm -rf $2
	echo "Clean $2 Service Success"
}

proj_base() {
	PROJ_BASEPATH=$1
	TEST="$PROJ_BASEPATH/BLADE_ROOT"
	while ! ([ -f $TEST ])
	do
		PROJ_BASEPATH=`dirname $PROJ_BASEPATH`
		if [ $PROJ_BASEPATH = "/" ]
		then
			echo "Error: not found project BLADE_ROOT"
			exit 2
		fi
		TEST="$PROJ_BASEPATH/BLADE_ROOT"
	done
}

build() {
	SERVICE_BASEPATH=`pwd`
	proj_base $SERVICE_BASEPATH
	SERVICE_NAME=`basename $SERVICE_BASEPATH`
	SERVICE_PROTO="$SERVICE_NAME.proto"
	SERVICEPATH=${SERVICE_BASEPATH:$((${#PROJ_BASEPATH}+1))}

	# check proto file
	if ! ([ -f $SERVICE_PROTO ])
	then
		echo "Error: not found $SERVICE_PROTO file"
		exit 1
	fi

	TEMPLATE_PATH="$PROJ_BASEPATH/RPCCommon/RPCTemplate/libsimplesvr"
	if ! ( [ -d $TEMPLATE_PATH ] )
	then
		echo "Error: not found $TEMPLATE_PATH"
		exit 3
	fi

	if [ -f BUILD ]
	then
		echo -n "warning: file already exists, do you want to overwrite file? [Y/n]: "
		read OVERWRITE
		if [ $OVERWRITE != "Y" ]
		then
			exit 0
		fi
	fi

	rpc build --proto=$SERVICE_PROTO --data="SERVICEPATH:$SERVICEPATH" --template=$TEMPLATE_PATH -I. -I$PROJ_BASEPATH -I"$PROJ_BASEPATH/thirdparty/protobuf/include"

	echo "generator success"
}

dump() {
	SERVICE_BASEPATH=`pwd`
	proj_base $SERVICE_BASEPATH
	SERVICE_NAME=`basename $SERVICE_BASEPATH`
	SERVICE_PROTO="$SERVICE_NAME.proto"
	SERVICEPATH=${SERVICE_BASEPATH:$((${#PROJ_BASEPATH}+1))}

	# check proto file
	if ! ([ -f $SERVICE_PROTO ])
	then
		echo "Error: not found $SERVICE_PROTO file"
		exit 1
	fi

	rpc dump --proto=$SERVICE_PROTO --data="SERVICEPATH:$SERVICEPATH" -I. -I$PROJ_BASEPATH -I"$PROJ_BASEPATH/thirdparty/protobuf/include"
}

case "$1" in
	create)
		create $@
		;;
	clean)
		clean $@
		;;
	build)
		build $@
		;;
	dump)
		dump $@
		;;
	*)
		usage $@
esac


