#!/bin/sh

WORKSTATION=`pwd`

# 准备第三方库
echo "准备第三方函数库..."
cd $WORKSTATION/thirdparty

# protobuf
if ! test -d ./protobuf; then
	echo "[下载] protobuf ..."
	wget https://protobuf.googlecode.com/files/protobuf-2.5.0.tar.gz -O ./protobuf-2.5.0.tar.gz
	echo "[编译] protobuf ..."
	tar -zxvf ./protobuf-2.5.0.tar.gz
	cd protobuf-2.5.0 
	./configure --enable-shared=no --prefix=$WORKSTATION/thirdparty/protobuf
	make
	make install
	cd ..
	rm -rf ./protobuf-2.5.0*
	cp ./protobuf/bin/* ../Tools/bin/
fi

# boost
if ! test -d ./boost; then
	echo "[下载] libboost ..."
	wget http://sourceforge.net/projects/boost/files/boost/1.55.0/boost_1_55_0.tar.gz/download -O boost_1_55_0.tar.gz
	echo "[编译] libboost ..."
	tar -zxvf ./boost_1_55_0.tar.gz
	cd boost_1_55_0
	./bootstrap.sh
	./b2 --prefix=$WORKSTATION/thirdparty/boost link=static runtime-link=static install
	cd ..
	rm -rf ./boost_1_55_0*
fi

# libnindex
if ! test -d ./libnindex; then
	echo "[下载] libnindex ..."
	git clone https://github.com/NickeyWoo/libnindex.git ./libnindex/
	echo "[编译] libnindex ..."
	make -C ./libnindex/
fi

# libsimplesvr
if ! test -d ./libsimplesvr; then
	echo "[下载] libsimplesvr ..."
	git clone https://github.com/NickeyWoo/libsimplesvr.git ./libsimplesvr/
	echo "[编译] libsimplesvr ..."
	make -C ./libsimplesvr/
fi

cd ..
# 第三方库准备完毕

# 准备工具集
echo "准备工具集..."
cd Tools

# typhoon-blade
if ! test -d ./typhoon-blade; then
	echo "[下载] typhoon-blade ..."
	git clone https://github.com/chen3feng/typhoon-blade.git ./typhoon-blade/
fi

#protoc-gen-rpc
if ! test -d ./protoc-gen-rpc; then
	echo "[下载] protoc-gen-rpc ..."
	git clone https://github.com/NickeyWoo/protoc-gen-rpc.git ./protoc-gen-rpc/
	echo "[编译] protoc-gen-rpc ..."
	make -C ./protoc-gen-rpc/
	cp ./protoc-gen-rpc/bin/* ./bin/
fi

cd ..
# 工具集准备完毕

# 初始化环境变量
echo "初始化环境变量..."
if ! [[ `cat ~/.bashrc | grep BLADE_AUTO_UPGRADE` ]]; then
	echo -e "export BLADE_AUTO_UPGRADE=no" >> ~/.bashrc
	echo -e "export PATH=\$PATH:$WORKSTATION/Tools/bin:$WORKSTATION/Tools/typhoon-blade/" >> ~/.bashrc
	echo -e "test -s $WORKSTATION/Tools/typhoon-blade/bladefunctions && . $WORKSTATION/Tools/typhoon-blade/bladefunctions || true" >> ~/.bashrc
	echo -e "alias b='blade build'" >> ~/.bashrc
	echo -e "alias r='blade run'" >> ~/.bashrc
	export BLADE_AUTO_UPGRADE=no
	export PATH=$PATH:$WORKSTATION/Tools/bin:$WORKSTATION/Tools/typhoon-blade/
	test -s $WORKSTATION/Tools/typhoon-blade/bladefunctions && . $WORKSTATION/Tools/typhoon-blade/bladefunctions || true
	alias b='blade build'
	alias r='blade run'
fi

echo "SimpleRPC 安装完毕"


